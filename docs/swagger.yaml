basePath: /api/v1
definitions:
  util.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  v1.AuthVerifyRequest:
    properties:
      method:
        type: string
      path:
        type: string
    required:
    - method
    - path
    type: object
  v1.CreatePermissionRequest:
    properties:
      method:
        enum:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        type: string
      path_pattern:
        type: string
    required:
    - method
    - path_pattern
    type: object
  v1.CreateRoleRequest:
    properties:
      is_super:
        type: boolean
      role_name:
        maxLength: 32
        minLength: 2
        type: string
    required:
    - role_name
    type: object
  v1.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  v1.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 6
        type: string
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  v1.RolePermissionRequest:
    properties:
      permission_ids:
        items:
          type: string
        type: array
    required:
    - permission_ids
    type: object
  v1.UpdatePermissionRequest:
    properties:
      method:
        enum:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        type: string
      path_pattern:
        type: string
    type: object
  v1.UpdateRoleRequest:
    properties:
      is_super:
        type: boolean
      role_name:
        type: string
    type: object
  v1.UpdateUserRequest:
    properties:
      email:
        type: string
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    type: object
  v1.UserRoleRequest:
    properties:
      role_ids:
        items:
          type: integer
        type: array
    required:
    - role_ids
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 面试系统后端API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: InterviewGenius API
  version: "1.0"
paths:
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: 刷新JWT令牌
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 刷新令牌
      tags:
      - 权限验证
  /api/v1/auth/verify:
    post:
      consumes:
      - application/json
      description: 验证当前用户是否有特定权限
      parameters:
      - description: 权限验证信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.AuthVerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 验证当前用户权限
      tags:
      - 权限验证
  /api/v1/permissions:
    get:
      consumes:
      - application/json
      description: 获取所有权限
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 获取权限列表
      tags:
      - 权限管理
    post:
      consumes:
      - application/json
      description: 创建新权限
      parameters:
      - description: 权限信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 创建权限
      tags:
      - 权限管理
  /api/v1/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定权限
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 删除权限
      tags:
      - 权限管理
    get:
      consumes:
      - application/json
      description: 获取指定权限的详细信息
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 获取权限详情
      tags:
      - 权限管理
    put:
      consumes:
      - application/json
      description: 更新指定权限的信息
      parameters:
      - description: 权限ID
        in: path
        name: id
        required: true
        type: string
      - description: 权限信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 更新权限
      tags:
      - 权限管理
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: 获取所有角色
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 获取角色列表
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      description: 创建新角色
      parameters:
      - description: 角色信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 创建角色
      tags:
      - 角色管理
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 删除角色
      tags:
      - 角色管理
    get:
      consumes:
      - application/json
      description: 获取角色详情及权限
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 获取角色详情
      tags:
      - 角色管理
    put:
      consumes:
      - application/json
      description: 更新角色信息
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 角色信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 更新角色
      tags:
      - 角色管理
  /api/v1/roles/{id}/permissions:
    get:
      consumes:
      - application/json
      description: 获取指定角色的所有权限
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 获取角色的权限
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      description: 为指定角色分配权限
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 权限ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 为角色分配权限
      tags:
      - 角色管理
  /api/v1/roles/{id}/permissions/{permissionId}:
    delete:
      consumes:
      - application/json
      description: 从指定角色中移除指定权限
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 权限ID
        in: path
        name: permissionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功移除权限
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 参数错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 内部服务器错误
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: 从角色中移除权限
      tags:
      - 角色管理
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 获取所有用户列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 获取用户的详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新用户的信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 更新用户信息
      tags:
      - 用户管理
  /api/v1/users/{id}/roles:
    get:
      consumes:
      - application/json
      description: 获取指定用户的所有角色
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 获取用户的角色
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 为指定用户分配角色
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      - description: 角色ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.UserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 为用户分配角色
      tags:
      - 用户管理
  /api/v1/users/{id}/roles/{roleId}:
    delete:
      consumes:
      - application/json
      description: 移除用户的特定角色
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: string
      - description: 角色ID
        in: path
        name: roleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
      security:
      - BearerAuth: []
      summary: 移除用户的角色
      tags:
      - 用户管理
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取令牌
      parameters:
      - description: 用户登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 用户注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
      summary: 用户注册
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
